-- Destrucción de tablas
DROP TABLE IF EXISTS USUARIO_ROL, ROL_PERMISO, REPARACION_DETALLE, REPARACION_PROPIEDAD, REPARACION_INMUEBLE;
DROP TABLE IF EXISTS PAGO_ADMINISTRADOR, PAGO_AGENDA, ALIADO_AGENDA, CONTRATO;
DROP TABLE IF EXISTS INQUILINO, INMUEBLE, PROPIEDAD;
DROP TABLE IF EXISTS ALIADO, CLIENTE, ADMINISTRADOR;
DROP TABLE IF EXISTS PERSONA_TELEFONO, PERSONA_DIRECCION, TELEFONO, DIRECCION;
DROP TABLE IF EXISTS ALIADO_ESPECIALIDAD, CONTRATO_ESTADO, PAGO_ESTADO, INMUEBLE_ESTADO, REPARACION, REPARACION_ESTADO;
DROP TABLE IF EXISTS PROPIEDAD_TIPO, DIRECCION_TIPO, TELEFONO_TIPO;
DROP TABLE IF EXISTS USUARIO, ROL, PERMISO, PERSONA;

-- Creación de tablas 

-- Tabla de Rol
CREATE TABLE ROL (
    ROL_ID INT IDENTITY(1,1) PRIMARY KEY,
    ROL_NOMBRE NVARCHAR(50) NOT NULL
);

-- Tabla de Permiso
CREATE TABLE PERMISO (
    PERM_ID INT IDENTITY(1,1) PRIMARY KEY,
    PERM_NOMBRE NVARCHAR(50) NOT NULL
);

-- Tabla de Usuario
CREATE TABLE USUARIO (
    USU_ID INT IDENTITY(1,1) PRIMARY KEY,
	USU_NOMBRE [varchar](50) NOT NULL,
	USU_PASSWORD [varchar](128) NOT NULL,
	USU_EMAIL [varchar](50) NOT NULL,
	USU_FECHA_CREACION [datetime] NOT NULL,
	USU_ACTIVO [bit] NOT NULL
);

-- Tabla intermedia entre usuarios y permisos
CREATE TABLE ROL_PERMISO (
    ROL_ID INT NOT NULL,
    PERM_ID INT NOT NULL,
    PRIMARY KEY (ROL_ID, PERM_ID), -- Clave primaria compuesta
    FOREIGN KEY (ROL_ID) REFERENCES ROL(ROL_ID), -- Clave foránea hacia ROL
    FOREIGN KEY (PERM_ID) REFERENCES PERMISO(PERM_ID) -- Clave foránea hacia PERMISO
);

-- Tabla intermedia entre usuarios y roles
CREATE TABLE USUARIO_ROL (
    USU_ID INT NOT NULL,
    ROL_ID INT NOT NULL,
    PRIMARY KEY (USU_ID, ROL_ID), -- Clave primaria compuesta
    FOREIGN KEY (USU_ID) REFERENCES USUARIO(USU_ID), -- Clave foránea hacia USUARIO
    FOREIGN KEY (ROL_ID) REFERENCES ROL(ROL_ID) -- Clave foránea hacia ROL
);

-- Tabla Tipo de Teléfono
CREATE TABLE TELEFONO_TIPO (
    TEL_TIP_ID INT IDENTITY(1,1) PRIMARY KEY,
    TEL_TIP_DESCRIPCION NVARCHAR(50) NOT NULL
);

-- Tabla Teléfono
CREATE TABLE TELEFONO (
    TEL_ID INT IDENTITY(1,1) PRIMARY KEY,
    TEL_NUMERO NVARCHAR(20) NOT NULL,
    TEL_TIP_ID INT NOT NULL FOREIGN KEY REFERENCES TELEFONO_TIPO(TEL_TIP_ID)
);

-- Tabla Persona
CREATE TABLE PERSONA (
    PER_ID INT IDENTITY(1,1) PRIMARY KEY,
    PER_RFC NVARCHAR(20) NOT NULL,
    PER_NOMBRE NVARCHAR(100) NOT NULL,
    PER_APATERNO NVARCHAR(100),
    PER_AMATERNO NVARCHAR(100),
    PER_EMAIL NVARCHAR(100),
    PER_NACIONALIDAD NVARCHAR(50),
    PER_ESPERSONA BIT NOT NULL,
    PER_TITULAR BIT
);

-- Tabla Persona telefono
CREATE TABLE PERSONA_TELEFONO (
    PER_TEL_ID INT IDENTITY(1,1) PRIMARY KEY,
    PER_ID INT NOT NULL FOREIGN KEY REFERENCES PERSONA(PER_ID),
    TEL_ID INT NOT NULL FOREIGN KEY REFERENCES TELEFONO(TEL_ID)
);

-- Tabla Dirección
CREATE TABLE DIRECCION (
    DIR_ID INT IDENTITY(1,1) PRIMARY KEY,
    DIR_CALLE_NUMERO NVARCHAR(150) NOT NULL,
    DIR_COLONIA NVARCHAR(100),
    DIR_CIUDAD NVARCHAR(100),
    DIR_ESTADO NVARCHAR(100),
    DIR_CP NVARCHAR(10),
    DIR_PAIS NVARCHAR(50)
);

-- Tabla Tipo de direccion persona
CREATE TABLE DIRECCION_TIPO (
    DIR_TIP_ID INT IDENTITY(1,1) PRIMARY KEY,
    DIR_TIP_TIPO NVARCHAR(50)
);

-- Tabla Relación Persona-Dirección
CREATE TABLE PERSONA_DIRECCION (
    PER_DIR_ID INT IDENTITY(1,1) PRIMARY KEY,
    PER_ID INT NOT NULL FOREIGN KEY REFERENCES PERSONA(PER_ID),
    DIR_ID INT NOT NULL FOREIGN KEY REFERENCES DIRECCION(DIR_ID),
    DIR_TIP_ID INT NOT NULL FOREIGN KEY REFERENCES DIRECCION_TIPO(DIR_TIP_ID)
);

-- Tabla Administradores
CREATE TABLE ADMINISTRADOR (
    ADM_ID INT IDENTITY(1,1) PRIMARY KEY,
    PER_ID INT NOT NULL FOREIGN KEY REFERENCES PERSONA(PER_ID),
    ADM_SUPERIOR_ID INT FOREIGN KEY REFERENCES ADMINISTRADOR(ADM_ID) NULL
);

-- Tabla Especialidad de Aliados
CREATE TABLE ALIADO_ESPECIALIDAD (
    ALI_ESP_ID INT IDENTITY(1,1) PRIMARY KEY,
    ALI_ESP_DESCRIPCION NVARCHAR(100) NOT NULL
);

-- Tabla Aliados
CREATE TABLE ALIADO (
    ALI_ID INT IDENTITY(1,1) PRIMARY KEY,
    ADM_ID INT NOT NULL FOREIGN KEY REFERENCES ADMINISTRADOR(ADM_ID),
    PER_ID INT NOT NULL FOREIGN KEY REFERENCES PERSONA(PER_ID),
	ALI_ESP_ID INT NOT NULL FOREIGN KEY REFERENCES ALIADO_ESPECIALIDAD(ALI_ESP_ID)
);

-- Tabla Agenda de Aliados
CREATE TABLE ALIADO_AGENDA (
    ALI_AGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    ALI_ID INT NOT NULL FOREIGN KEY REFERENCES ALIADO(ALI_ID),
    ALI_AGE_FECHA DATE NOT NULL,
    ALI_AGE_HORA_INICIO TIME NOT NULL,
    ALI_AGE_HORA_FIN TIME NOT NULL,
    ALI_AGE_DISPONIBLE BIT NOT NULL
);

-- Tabla Clientes
CREATE TABLE CLIENTE (
    CLI_ID INT IDENTITY(1,1) PRIMARY KEY,
    PER_ID INT NOT NULL FOREIGN KEY REFERENCES PERSONA(PER_ID),
    ADM_ID INT NOT NULL FOREIGN KEY REFERENCES ADMINISTRADOR(ADM_ID)
);

-- Tabla Propiedad Tipo
CREATE TABLE PROPIEDAD_TIPO (
    PRO_TIP_ID INT IDENTITY(1,1) PRIMARY KEY,
    PRO_TIP_DESCRIPCION NVARCHAR(100) NOT NULL
);

-- Tabla Propiedades
CREATE TABLE PROPIEDAD (
    PRO_ID INT IDENTITY(1,1) PRIMARY KEY,
    PRO_DESCRIPCION NVARCHAR(200) NOT NULL,
    DIR_ID INT NOT NULL FOREIGN KEY REFERENCES DIRECCION(DIR_ID),
    TEL_ID INT FOREIGN KEY REFERENCES TELEFONO(TEL_ID) NULL,
    PRO_UNIDADES INT,
    PRO_UNIDADES_ALQUILADAS INT,
    PRO_COMENTARIO TEXT,
    PRO_VALOR DECIMAL(18,2),
    PRO_SUPERFICIEM DECIMAL(18,2),
    ADM_ID INT FOREIGN KEY REFERENCES ADMINISTRADOR(ADM_ID),
    CLI_ID INT NOT NULL FOREIGN KEY REFERENCES CLIENTE(CLI_ID),
    PRO_TIP_ID INT NOT NULL FOREIGN KEY REFERENCES PROPIEDAD_TIPO(PRO_TIP_ID)
);

-- Tabla de estados de inmueble
CREATE TABLE INMUEBLE_ESTADO (
    INM_EST_ID INT IDENTITY(1,1) PRIMARY KEY,
    INM_EST_DESCRIPCION NVARCHAR(50) NOT NULL UNIQUE
);

-- Tabla Inmuebles
CREATE TABLE INMUEBLE (
    INM_ID INT IDENTITY(1,1) PRIMARY KEY,
    PRO_ID INT NOT NULL FOREIGN KEY REFERENCES PROPIEDAD(PRO_ID),
    DIR_ID INT NOT NULL FOREIGN KEY REFERENCES DIRECCION(DIR_ID),
    INM_DESCRIPCION NVARCHAR(200),
    INM_COMENTARIO TEXT,
    INM_VALOR DECIMAL(18,2),
    INM_SUPERFICIEM DECIMAL(18,2),
    INM_CONSTRUIDOM DECIMAL(18,2),
    TEL_ID INT FOREIGN KEY REFERENCES TELEFONO(TEL_ID) NULL,
    INM_ESTADO_ID INT FOREIGN KEY REFERENCES INMUEBLE_ESTADO(INM_EST_ID)
);

-- Tabla Inquilinos
CREATE TABLE INQUILINO (
    INQ_ID INT IDENTITY(1,1) PRIMARY KEY,
    PER_ID INT NOT NULL FOREIGN KEY REFERENCES PERSONA(PER_ID),
    INM_ID INT NOT NULL FOREIGN KEY REFERENCES INMUEBLE(INM_ID),
    ADM_ID INT NOT NULL FOREIGN KEY REFERENCES ADMINISTRADOR(ADM_ID)
);

-- Tabla de estados de contrato
CREATE TABLE CONTRATO_ESTADO (
    CON_EST_ID INT IDENTITY(1,1) PRIMARY KEY,
    CON_EST_DESCRIPCION NVARCHAR(50) NOT NULL UNIQUE
);

-- Tabla Contratos
CREATE TABLE CONTRATO (
    CON_ID INT IDENTITY(1,1) PRIMARY KEY,
    INQ_ID INT NOT NULL FOREIGN KEY REFERENCES INQUILINO(INQ_ID),
    INM_ID INT NOT NULL FOREIGN KEY REFERENCES INMUEBLE(INM_ID),
    ADM_ID INT NOT NULL FOREIGN KEY REFERENCES ADMINISTRADOR(ADM_ID),
    CON_FECHA_INICIO DATE NOT NULL,
    CON_FECHA_FIN DATE NOT NULL,
    CON_FECHA_CANCELACION DATE,
    CON_MONTO_MENSUAL DECIMAL(18,2) NOT NULL,
	CON_MONTO_DEPOSITO DECIMAL(18,2) NOT NULL,
	CON_RENTAS_INICIALES INT NOT NULL,
	CON_PORCENTAJE_COMISION DECIMAL(5,4) NOT NULL,
    CON_FECHA_FIRMA DATE NOT NULL,
    CON_ESTADO_ID INT NOT NULL FOREIGN KEY REFERENCES CONTRATO_ESTADO(CON_EST_ID),
    CON_COMENTARIOS TEXT
);

-- Tabla de estados de pago
CREATE TABLE PAGO_ESTADO (
    PAGO_EST_ID INT IDENTITY(1,1) PRIMARY KEY,
    PAGO_EST_DESCRIPCION NVARCHAR(50) NOT NULL UNIQUE
);

-- Tabla Pagos Administrador
CREATE TABLE PAGO_ADMINISTRADOR (
    PAGO_ADM_ID INT IDENTITY(1,1) PRIMARY KEY,
    CON_ID INT NOT NULL FOREIGN KEY REFERENCES CONTRATO(CON_ID),
    PAGO_ADM_MONTO DECIMAL(18,2) NOT NULL,
    PAGO_ADM_FECHA DATE NOT NULL,
    PAGO_ADM_ESTADO_ID INT NOT NULL FOREIGN KEY REFERENCES PAGO_ESTADO(PAGO_EST_ID),
    PAGO_ADM_COMENTARIOS TEXT
);

-- Tabla Agenda de Pagos
CREATE TABLE PAGO_AGENDA (
    PAGO_ID INT IDENTITY(1,1) PRIMARY KEY,
    CON_ID INT NOT NULL FOREIGN KEY REFERENCES CONTRATO(CON_ID),
	PAGO_CUOTA_NRO INT NOT NULL,
    PAGO_FECHA_VENCIMIENTO DATE NOT NULL,
    PAGO_MONTO DECIMAL(18,2) NOT NULL,
    PAGO_FECHA_NOTIFICACION DATE,
    PAGO_FECHA_REALIZADO DATE,
    PAGO_ESTADO_ID INT NOT NULL FOREIGN KEY REFERENCES PAGO_ESTADO(PAGO_EST_ID)
);

-- Tabla Estado de Reparaciones
CREATE TABLE REPARACION_ESTADO (
    REP_EST_ID INT IDENTITY(1,1) PRIMARY KEY,
    REP_EST_DESCRIPCION NVARCHAR(50) NOT NULL UNIQUE
);

-- Tabla Reparaciones
CREATE TABLE REPARACION (
    REP_ID INT IDENTITY(1,1) PRIMARY KEY,
    REP_FECHA_SOLICITUD DATE NOT NULL,
    REP_FECHA_INICIO DATE,
    REP_FECHA_FIN DATE,
    REP_COSTO_ESTIMADO DECIMAL(18,2),
    REP_COSTO_FINAL DECIMAL(18,2),
    REP_DESCRIPCION NVARCHAR(500),
    REP_EST_ID INT NOT NULL FOREIGN KEY REFERENCES REPARACION_ESTADO(REP_EST_ID)
);

-- Tabla Detalle de Reparaciones
CREATE TABLE REPARACION_DETALLE (
    REP_DET_ID INT IDENTITY(1,1) PRIMARY KEY,
    REP_ID INT NOT NULL FOREIGN KEY REFERENCES REPARACION(REP_ID),
    REP_DET_DESCRIPCION NVARCHAR(500),
    REP_DET_COSTO DECIMAL(18,2),
    REP_DET_FECHA DATE
);

-- Tabla Detalle de Reparaciones relacionadas con Propiedad
CREATE TABLE REPARACION_PROPIEDAD (
	REP_PRO_ID INT IDENTITY(1,1) PRIMARY KEY,
	PRO_ID INT NOT NULL FOREIGN KEY REFERENCES PROPIEDAD(PRO_ID),
	REP_ID INT NOT NULL FOREIGN KEY REFERENCES REPARACION(REP_ID)
);

-- Tabla Detalle de Reparaciones relacionadas con Inmueble
CREATE TABLE REPARACION_INMUEBLE (
	REP_INM_ID INT IDENTITY(1,1) PRIMARY KEY,
	INM_ID INT NOT NULL FOREIGN KEY REFERENCES INMUEBLE(INM_ID),
	REP_ID INT NOT NULL FOREIGN KEY REFERENCES REPARACION(REP_ID)
);


--INSERTAR VALORES POR DEFECTO

-- Habilitar IDENTITY_INSERT para la tabla PERMISO
SET IDENTITY_INSERT PERMISO ON;

INSERT INTO PERMISO (PERM_ID, PERM_NOMBRE)
VALUES 
	(1, 'admin_administrador'),
	(2, 'admin_aliado'),
	(3, 'admin_agenda'),
	(4, 'admin_cliente'),
	(5, 'admin_propiedad'),
	(6, 'admin_reparacion'),
	(7, 'admin_rol'),
	(8, 'admin_usuario');

SET IDENTITY_INSERT PERMISO OFF;

-- Habilitar IDENTITY_INSERT para la tabla ROL
SET IDENTITY_INSERT ROL ON;

INSERT INTO ROL (ROL_ID, ROL_NOMBRE)
VALUES
    (1, 'sa'), -- usuario para agregar y modificar tablas del sistema
    (2, 'administrador'), -- administrador de inmuebles
    (3, 'inquilino'), -- inquilino del inmueble
    (4, 'aliado'); -- aliado

SET IDENTITY_INSERT ROL OFF;

INSERT INTO ROL_PERMISO (ROL_ID, PERM_ID)
VALUES
	(1, 1),
	(1, 2),
	(1, 3),
	(1, 4),
	(1, 5),
	(1, 6),
	(1, 7),
	(1, 8),
	(2, 2),
	(2, 3),
	(2, 4),
	(2, 5),
	(2, 6);

-- Habilitar IDENTITY_INSERT para la tabla USUARIO
SET IDENTITY_INSERT USUARIO ON;

INSERT INTO USUARIO (USU_ID, USU_NOMBRE, USU_PASSWORD, USU_EMAIL, USU_FECHA_CREACION, USU_ACTIVO)
VALUES
    (1, 'Super Admin', 'ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413', 
     'fede.berton@gmail.com', GETDATE(), 1);

SET IDENTITY_INSERT USUARIO OFF;

-- Insertar valores en la tabla USUARIO_ROL
INSERT INTO USUARIO_ROL (USU_ID, ROL_ID)
VALUES
    (1, 1); -- Usuario 'Super Admin' con rol 'sa'

-- Habilitar IDENTITY_INSERT para la tabla CONTRATO_ESTADO
SET IDENTITY_INSERT CONTRATO_ESTADO ON;

INSERT INTO CONTRATO_ESTADO (CON_EST_ID, CON_EST_DESCRIPCION)
VALUES 
    (1, 'Activo'), 
    (2, 'Finalizado'), 
    (3, 'Cancelado');

SET IDENTITY_INSERT CONTRATO_ESTADO OFF;

-- Habilitar IDENTITY_INSERT para la tabla PAGO_ESTADO
SET IDENTITY_INSERT PAGO_ESTADO ON;

INSERT INTO PAGO_ESTADO (PAGO_EST_ID, PAGO_EST_DESCRIPCION)
VALUES 
    (1, 'Pendiente'), 
    (2, 'Pagado'), 
    (3, 'Notificado'), 
    (4, 'Cancelado');

SET IDENTITY_INSERT PAGO_ESTADO OFF;

-- Habilitar IDENTITY_INSERT para la tabla INMUEBLE_ESTADO
SET IDENTITY_INSERT INMUEBLE_ESTADO ON;

INSERT INTO INMUEBLE_ESTADO (INM_EST_ID, INM_EST_DESCRIPCION)
VALUES 
    (1, 'Libre'), 
    (2, 'Arrendado'), 
    (3, 'En Mantenimiento'), 
    (4, 'Reservado');

SET IDENTITY_INSERT INMUEBLE_ESTADO OFF;

-- Habilitar IDENTITY_INSERT para la tabla REPARACION_ESTADO
SET IDENTITY_INSERT REPARACION_ESTADO ON;

INSERT INTO REPARACION_ESTADO (REP_EST_ID, REP_EST_DESCRIPCION)
VALUES 
    (1, 'Solicitada'), 
    (2, 'Pendiente'), 
    (3, 'En Proceso'), 
    (4, 'Completada'), 
    (5, 'Cancelada');

SET IDENTITY_INSERT REPARACION_ESTADO OFF;

-- Habilitar IDENTITY_INSERT para la tabla TELEFONO_TIPO
SET IDENTITY_INSERT TELEFONO_TIPO ON;

INSERT INTO TELEFONO_TIPO (TEL_TIP_ID, TEL_TIP_DESCRIPCION)
VALUES 
    (1, 'Celular'),  
    (2, 'Fijo'),  
    (3, 'Trabajo'),  
    (4, 'Casa'),  
    (5, 'Fax'),  
    (6, 'Otro');

SET IDENTITY_INSERT TELEFONO_TIPO OFF;
