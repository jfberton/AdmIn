@page "/m/reparaciones/detalle/{Id:int}"
@using AdmIn.Business.Entidades
@using AdmIn.UI.Services

@inject IServ_Mock ServicioReparaciones
@inherits BaseComponent

<AuthorizeView>
    <Authorized>
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5>Detalle de Reparación #@reparacion?.Id</h5>
                <button class="btn btn-secondary" @onclick="VolverAListado">
                    <i class="fas fa-arrow-left"></i> Volver
                </button>
            </div>
            
            @if (reparacion == null)
            {
                <div class="card-body">
                    <p>Cargando detalles...</p>
                </div>
            }
            else
            {
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6>Información Básica</h6>
                            <dl class="row">
                                <dt class="col-sm-4">Inmueble:</dt>
                                <dd class="col-sm-8">@reparacion.Inmueble?.Direccion?.ToString()</dd>
                                
                                <dt class="col-sm-4">Categoría:</dt>
                                <dd class="col-sm-8">@reparacion.Categoria?.Categoria</dd>
                                
                                <dt class="col-sm-4">Estado:</dt>
                                <dd class="col-sm-8">
                                    <RadzenBadge Text="@reparacion.Estado?.Estado" BadgeStyle="@GetBadgeStyle(reparacion.Estado?.Estado)" />
                                </dd>
                            </dl>
                        </div>
                        
                        <div class="col-md-6">
                            <h6>Fechas</h6>
                            <dl class="row">
                                <dt class="col-sm-4">Solicitud:</dt>
                                <dd class="col-sm-8">@reparacion.FechaSolicitud.ToShortDateString()</dd>
                                
                                <dt class="col-sm-4">Inicio:</dt>
                                <dd class="col-sm-8">@(reparacion.FechaInicio?.ToShortDateString() ?? "N/A")</dd>
                                
                                <dt class="col-sm-4">Finalización:</dt>
                                <dd class="col-sm-8">@(reparacion.FechaFin?.ToShortDateString() ?? "N/A")</dd>
                            </dl>
                        </div>
                    </div>
                    
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6>Descripción</h6>
                            <p>@reparacion.Descripcion</p>
                        </div>
                    </div>

                    @if (reparacion?.Estado?.Estado == "En proceso")
                    {
                        <AuthorizeView Roles="edit_reparacion">
                            <Authorized>
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <button class="btn btn-primary" @onclick="() => AgregarDetalle(reparacion.Id)">
                                            <i class="fas fa-plus"></i> Agregar Detalle
                                        </button>
                                    </div>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    }
                    
                    @if (reparacion.Estado?.Estado == "Pendiente")
                    {
                        <AuthorizeView Roles="edit_reparacion">
                            <Authorized>
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <button class="btn btn-primary me-2" @onclick="() => AsignarProfesional(reparacion.Id)">
                                            <i class="fas fa-user-plus"></i> Asignar Profesional
                                        </button>
                                        <button class="btn btn-danger" @onclick="() => CancelarReparacion(reparacion.Id)">
                                            <i class="fas fa-times"></i> Cancelar Reparación
                                        </button>
                                    </div>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    }
                    
                    @if (reparacion.Detalles?.Any() == true)
                    {
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6>Detalles de Trabajo</h6>
                                <RadzenDataGrid TItem="ReparacionDetalle" Data="@reparacion.Detalles" AllowPaging="true" PageSize="5">
                                    <Columns>
                                        <RadzenDataGridColumn TItem="ReparacionDetalle" Title="Fecha" Width="120px">
                                            <Template Context="detalle">
                                                @detalle.Fecha.ToShortDateString()
                                            </Template>
                                        </RadzenDataGridColumn>
                                        
                                        <RadzenDataGridColumn TItem="ReparacionDetalle" Title="Descripción" Property="Descripcion" />
                                        
                                        <RadzenDataGridColumn TItem="ReparacionDetalle" Title="Costo" Width="120px">
                                            <Template Context="detalle">
                                                @detalle.Costo.ToString("C")
                                            </Template>
                                        </RadzenDataGridColumn>
                                        
                                        <RadzenDataGridColumn TItem="ReparacionDetalle" Title="Responsable" Width="150px">
                                            <Template Context="detalle">
                                                @if (detalle.ACargoDePropietario)
                                                {
                                                    <span class="badge bg-info">Propietario</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inquilino</span>
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGrid>
                            </div>
                        </div>
                    }
                    
                    @if (reparacion.Estado?.Estado == "Finalizado por aprobar")
                    {
                        <AuthorizeView Roles="approve_reparacion">
                            <Authorized>
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h6>Aprobar Reparación</h6>
                                        <div class="card">
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <label class="form-label">Calificación (1-5)</label>
                                                    <RadzenRating Stars="5" @bind-Value="@calificacion.CalificacionTrabajo" />
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Comentario</label>
                                                    <RadzenTextArea @bind-Value="@calificacion.Comentario" Rows="3" />
                                                </div>
                                                <button class="btn btn-success" @onclick="AprobarReparacion">
                                                    <i class="fas fa-check"></i> Aprobar Reparación
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    }
                </div>
            }
        </div>
    </Authorized>
</AuthorizeView>

@code {
    [Parameter]
    public int Id { get; set; }
    
    private Reparacion? reparacion;
    private EmpleadoCalificacion calificacion = new EmpleadoCalificacion();

    protected override async Task OnInitializedAsync()
    {
        EstablecerTituloPagina("Detalle de Reparación");
        await CargarReparacion();
    }

    private async Task CargarReparacion()
    {
        reparacion = await ServicioReparaciones.ObtenerReparacionPorId(Id);
    }

    private BadgeStyle GetBadgeStyle(string estado)
    {
        return estado switch
        {
            "Pendiente" => BadgeStyle.Warning,
            "En proceso" => BadgeStyle.Primary,
            "Finalizado" => BadgeStyle.Success,
            "Rechazado" => BadgeStyle.Danger,
            "En disputa" => BadgeStyle.Danger,
            _ => BadgeStyle.Info
        };
    }

    private void VolverAListado()
    {
        IrA("/m/reparaciones");
    }

    private void AsignarProfesional(int reparacionId)
    {
        IrA($"/m/reparaciones/asignar/{reparacionId}");
    }

    private void AgregarDetalle(int reparacionId)
    {
        IrA($"/m/reparaciones/detalle/{reparacionId}/nuevo");
    }

    private async Task CancelarReparacion(int reparacionId)
    {
        var success = await ServicioReparaciones.RechazarReparacion(reparacionId, 0); // 0 para admin
        if (success)
        {
            MostrarNotificacion(NotificationSeverity.Success, "Éxito", "Reparación cancelada");
            await CargarReparacion();
        }
        else
        {
            MostrarNotificacion(NotificationSeverity.Error, "Error", "No se pudo cancelar la reparación");
        }
    }

    private async Task AprobarReparacion()
    {
        if (reparacion != null)
        {
            calificacion.ReparacionId = reparacion.Id;
            calificacion.EmpleadoId = reparacion.EmpleadoId;
            calificacion.CalificacionComportamiento = calificacion.CalificacionTrabajo; // Mismo valor por simplicidad
            
            var success = await ServicioReparaciones.AprobarReparacion(reparacion.Id, calificacion);
            if (success)
            {
                MostrarNotificacion(NotificationSeverity.Success, "Éxito", "Reparación aprobada");
                await CargarReparacion();
            }
            else
            {
                MostrarNotificacion(NotificationSeverity.Error, "Error", "No se pudo aprobar la reparación");
            }
        }
    }
}