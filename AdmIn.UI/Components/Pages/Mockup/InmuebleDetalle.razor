@page "/inmueble/{inmuebleId:int}"

@inherits BaseComponent

@using Radzen.Blazor
@using AdmIn.Business.Entidades
@using AdmIn.UI.Services.Mock
@using AdmIn.UI.Services
@inject IInmuebleService InmuebleMockService
@inject DialogService DialogService

@if (inmueble == null)
{
    <RadzenAlert Text="Cargando..." Style="margin: 20px;" />
}
else
{
    <div class="main-property-container">
        <RadzenCard>
            <!-- Botones de acción -->
            <div class="primary-actions" style="margin-bottom: 20px; display: flex; flex-wrap: wrap; gap: 10px;">
                <RadzenButton Text="Volver" Icon="arrow_back" Click="@Volver" />
                <RadzenButton Text="Editar" Icon="edit" Click="@EditarInmueble" />
                <RadzenButton Text="Eliminar" Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@(async () => await EliminarInmueble())" />
            </div>

            <Header>
                <div class="property-title">
                    <h3>@inmueble.Descripcion</h3>
                </div>
            </Header>

            <div class="secondary-actions" style="display: flex; flex-wrap: wrap; gap: 10px; margin: 15px 0;">
                @if (inmueble.Estado.Estado == "Disponible")
                {
                    <RadzenButton Text="Reservar" Icon="event" Click="@(() => IrAReservarInmueble(inmueble.Id))" />
                    <RadzenButton Text="Alquilar" Icon="event" Click="@(() => IrAAlquilarInmueble(inmueble.Id))" />
                }
                @if (inmueble.Estado.Estado == "Reservado")
                {
                    <RadzenButton Text="Alquilar" Icon="event" Click="@(() => IrAAlquilarInmueble(inmueble.Id))" />
                }
            </div>

            <Content>
                <RadzenRow>
                    <RadzenColumn Size="12" MD="6">
                        <p class="property-address"><strong>Dirección:</strong> @inmueble.Direccion.ToString()</p>
                        <p class="property-value"><strong>Valor:</strong> @inmueble.Valor.ToString("C")</p>
                        <p class="property-area"><strong>Superficie:</strong> @inmueble.Superficie m²</p>
                        <p class="property-built-area"><strong>Construido:</strong> @inmueble.Construido m²</p>

                        <RadzenBadge class="property-status-badge" Text="@inmueble.Estado.Estado" BadgeStyle="@GetBadgeColor(inmueble.Estado.Estado)" />

                        @if (inmueble.Estado.Estado == "Reservado")
                        {
                            <RadzenBadge Text="@ObtenerDetalleReserva(inmueble.Reserva)" BadgeStyle="BadgeStyle.Light" />
                        }
                        @if (inmueble.Estado.Estado == "Ocupado")
                        {
                            <RadzenBadge Text="@ObtenerDetalleOcupacion(contratoVigente)" BadgeStyle="BadgeStyle.Light" />
                        }
                    </RadzenColumn>
                </RadzenRow>

                <RadzenTabs>
                    <Tabs>
                        <RadzenTabsItem Text="Características">
                            <RadzenDataGrid Data="@inmueble.Caracteristicas" TItem="CaracteristicaInmueble" Style="margin-top: 10px;">
                                <Columns>
                                    <RadzenDataGridColumn Title="Nombre" Property="Nombre" />
                                    <RadzenDataGridColumn Title="Valor" Property="Valor" />
                                </Columns>
                            </RadzenDataGrid>
                        </RadzenTabsItem>

                        <RadzenTabsItem Text="Inquilinos">
                            <RadzenDataGrid Data="@inmueble.Inquilinos" TItem="Inquilino" Style="margin-top: 10px;">
                                <Columns>
                                    <RadzenDataGridColumn Title="Nombre" Property="Nombre" />
                                    <RadzenDataGridColumn Title="Correo" Property="Email" />
                                    <RadzenDataGridColumn Title="Teléfono">
                                        <Template Context="inquilino">
                                            @if (inquilino.Telefonos != null && inquilino.Telefonos.Any())
                                            {
                                                @inquilino.Telefonos[0].ToString()
                                            }
                                            else
                                            {
                                                <span>Sin teléfono</span>
                                            }
                                        </Template>
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGrid>
                        </RadzenTabsItem>

                        <RadzenTabsItem Text="Pagos">
                            @if (contratoVigente != null && contratoVigente.Pagos?.Any() == true)
                            {
                                <RadzenDataGrid Data="@contratoVigente.Pagos" TItem="Pago">
                                    <Columns>
                                        <RadzenDataGridColumn TItem="Pago" Title="Fecha Vencimiento">
                                            <Template Context="pago">
                                                @pago.FechaVencimiento.ToString("d")
                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="Pago" Title="Monto">
                                            <Template Context="pago">
                                                @pago.Monto.ToString("C")
                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="Pago" Title="Estado">
                                            <Template Context="pago">
                                                @pago.Estado.Estado
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGrid>
                            }
                            else
                            {
                                <p>No hay pagos disponibles para mostrar.</p>
                            }
                        </RadzenTabsItem>

                        <RadzenTabsItem Text="Reparaciones">
                            <div>
                                <RadzenButton Text="Administrar Reparaciones" Icon="settings" Click="() => IrAAdministrarReparaciones(inmueble.Id)" />
                            </div>

                            <RadzenDataGrid Data="@inmueble.Reparaciones" TItem="Reparacion">
                                <Columns>
                                    <RadzenDataGridColumn Title="Descripción" Property="Descripcion" />
                                    <RadzenDataGridColumn TItem="Reparacion" Title="Costo Final">
                                        <Template Context="reparacion">
                                            @((reparacion.CostoFinal ?? 0).ToString("C"))
                                        </Template>
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn Title="Estado" Property="Estado.Estado" />
                                </Columns>
                            </RadzenDataGrid>
                        </RadzenTabsItem>
                    </Tabs>
                </RadzenTabs>

                <RadzenRow>
                    <RadzenColumn Size="12" MD="6">
                        @if (inmueble.ImagenPrincipal != null)
                        {
                            <img src="@inmueble.ImagenPrincipal.Url" class="main-property-image" />
                        }
                        else
                        {
                            <div class="main-property-image-placeholder">
                                <span>Sin imagen principal</span>
                            </div>
                        }

                        <div class="thumbnail-gallery">
                            @foreach (var imagen in inmueble.Imagenes)
                            {
                                <img src="@imagen.Url"
                                     class="thumbnail-image @(imagen.Id == inmueble.ImagenPrincipalId ? "active-thumbnail" : "")"
                                     @onclick="() => CambiarImagenPrincipal(imagen.Id)" />
                            }
                        </div>
                    </RadzenColumn>
                </RadzenRow>
            </Content>
        </RadzenCard>
    </div>
}

@code {
    [Parameter]
    public int InmuebleId { get; set; }

    private Inmueble? inmueble;

    Contrato? contratoVigente => inmueble.Contratos?.FirstOrDefault(c => c.Estado.Descripcion == "Vigente");

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        inmueble = await InmuebleMockService.ObtenerInmueblePorId(InmuebleId);
        base.EstablecerTituloPagina("Inmuebles", $"Detalle inmueble # {inmueble.Id.ToString()}");
    }

    private void EditarInmueble()
    {
        NavigationManager.NavigateTo($"/editar-inmueble/{inmueble.Id}");
    }

    private async Task EliminarInmueble()
    {
        bool? confirmar = await DialogService.Confirm("¿Estás seguro de eliminar este inmueble?", "Eliminar");
        if (confirmar == true)
        {
            await InmuebleMockService.EliminarInmueble(InmuebleId);
            NavigationManager.NavigateTo("m/inmuebles/");
        }
    }

    private void IrAReservarInmueble(int inmuebleId)
    {
        NavigationManager.NavigateTo($"/inmueble/reservar/{inmuebleId}");
    }

    private void IrAAlquilarInmueble(int inmuebleId)
    {
        NavigationManager.NavigateTo($"/inmueble/alquilar/{inmuebleId}");
    }

    private void IrAAdministrarReparaciones(int inmuebleId)
    {
        NavigationManager.NavigateTo($"/inmueble/{inmuebleId}/reparaciones");
    }

    private void CambiarImagenPrincipal(Guid imagenId)
    {
        inmueble.ImagenPrincipalId = imagenId;
    }

    private BadgeStyle GetBadgeColor(string estado)
    {
        return estado switch
        {
            "Disponible" => BadgeStyle.Success,
            "Ocupado" => BadgeStyle.Dark,
            "Reservado" => BadgeStyle.Info,
            "En reparación" => BadgeStyle.Warning,
            _ => BadgeStyle.Light
        };
    }

    private string ObtenerDetalleReserva(Reserva? reserva)
    {
        if (reserva != null)
            return $" A: ({reserva.Persona.Rfc}) - {reserva.Persona.Nombre}, {reserva.Persona.ApellidoPaterno} {reserva.Persona.ApellidoMaterno}. Hasta: {reserva.FechaFinalizacion.ToShortDateString()}";
        return string.Empty;
    }

    private string ObtenerDetalleOcupacion(Contrato? contrato)
    {
        if (contrato != null)
            return $" Inquilino: ({contrato.Inquilino.Rfc}) - {contrato.Inquilino.Nombre}, {contrato.Inquilino.ApellidoPaterno} {contrato.Inquilino.ApellidoMaterno}. Hasta: {contrato.FechaFin.ToShortDateString()}";
        return string.Empty;
    }

    private void Volver()
    {
        IrA("m/inmuebles");
    }
}
